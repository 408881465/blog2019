/*
 * This file is generated by jOOQ.
 */
package ch.rasc.ratelimit.db.tables.records;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import ch.rasc.ratelimit.db.tables.Earthquake;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = { "http://www.jooq.org", "jOOQ version:3.11.11" },
    comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EarthquakeRecord extends UpdatableRecordImpl<EarthquakeRecord> implements
    Record8<Long, LocalDateTime, BigDecimal, BigDecimal, BigDecimal, BigDecimal, String, String> {

  private static final long serialVersionUID = 596503533;

  /**
   * Setter for <code>EARTHQUAKE.ID</code>.
   */
  public void setId(Long value) {
    set(0, value);
  }

  /**
   * Getter for <code>EARTHQUAKE.ID</code>.
   */
  public Long getId() {
    return (Long) get(0);
  }

  /**
   * Setter for <code>EARTHQUAKE.TIME</code>.
   */
  public void setTime(LocalDateTime value) {
    set(1, value);
  }

  /**
   * Getter for <code>EARTHQUAKE.TIME</code>.
   */
  public LocalDateTime getTime() {
    return (LocalDateTime) get(1);
  }

  /**
   * Setter for <code>EARTHQUAKE.LATITUDE</code>.
   */
  public void setLatitude(BigDecimal value) {
    set(2, value);
  }

  /**
   * Getter for <code>EARTHQUAKE.LATITUDE</code>.
   */
  public BigDecimal getLatitude() {
    return (BigDecimal) get(2);
  }

  /**
   * Setter for <code>EARTHQUAKE.LONGITUDE</code>.
   */
  public void setLongitude(BigDecimal value) {
    set(3, value);
  }

  /**
   * Getter for <code>EARTHQUAKE.LONGITUDE</code>.
   */
  public BigDecimal getLongitude() {
    return (BigDecimal) get(3);
  }

  /**
   * Setter for <code>EARTHQUAKE.DEPTH</code>.
   */
  public void setDepth(BigDecimal value) {
    set(4, value);
  }

  /**
   * Getter for <code>EARTHQUAKE.DEPTH</code>.
   */
  public BigDecimal getDepth() {
    return (BigDecimal) get(4);
  }

  /**
   * Setter for <code>EARTHQUAKE.MAG</code>.
   */
  public void setMag(BigDecimal value) {
    set(5, value);
  }

  /**
   * Getter for <code>EARTHQUAKE.MAG</code>.
   */
  public BigDecimal getMag() {
    return (BigDecimal) get(5);
  }

  /**
   * Setter for <code>EARTHQUAKE.PLACE</code>.
   */
  public void setPlace(String value) {
    set(6, value);
  }

  /**
   * Getter for <code>EARTHQUAKE.PLACE</code>.
   */
  public String getPlace() {
    return (String) get(6);
  }

  /**
   * Setter for <code>EARTHQUAKE.EARTHQUAKE_ID</code>.
   */
  public void setEarthquakeId(String value) {
    set(7, value);
  }

  /**
   * Getter for <code>EARTHQUAKE.EARTHQUAKE_ID</code>.
   */
  public String getEarthquakeId() {
    return (String) get(7);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  /**
   * {@inheritDoc}
   */
  @Override
  public Record1<Long> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record8 type implementation
  // -------------------------------------------------------------------------

  /**
   * {@inheritDoc}
   */
  @Override
  public Row8<Long, LocalDateTime, BigDecimal, BigDecimal, BigDecimal, BigDecimal, String, String> fieldsRow() {
    return (Row8) super.fieldsRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Row8<Long, LocalDateTime, BigDecimal, BigDecimal, BigDecimal, BigDecimal, String, String> valuesRow() {
    return (Row8) super.valuesRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<Long> field1() {
    return Earthquake.EARTHQUAKE.ID;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<LocalDateTime> field2() {
    return Earthquake.EARTHQUAKE.TIME;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<BigDecimal> field3() {
    return Earthquake.EARTHQUAKE.LATITUDE;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<BigDecimal> field4() {
    return Earthquake.EARTHQUAKE.LONGITUDE;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<BigDecimal> field5() {
    return Earthquake.EARTHQUAKE.DEPTH;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<BigDecimal> field6() {
    return Earthquake.EARTHQUAKE.MAG;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<String> field7() {
    return Earthquake.EARTHQUAKE.PLACE;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<String> field8() {
    return Earthquake.EARTHQUAKE.EARTHQUAKE_ID;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Long component1() {
    return getId();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public LocalDateTime component2() {
    return getTime();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public BigDecimal component3() {
    return getLatitude();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public BigDecimal component4() {
    return getLongitude();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public BigDecimal component5() {
    return getDepth();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public BigDecimal component6() {
    return getMag();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String component7() {
    return getPlace();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String component8() {
    return getEarthquakeId();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Long value1() {
    return getId();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public LocalDateTime value2() {
    return getTime();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public BigDecimal value3() {
    return getLatitude();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public BigDecimal value4() {
    return getLongitude();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public BigDecimal value5() {
    return getDepth();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public BigDecimal value6() {
    return getMag();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String value7() {
    return getPlace();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String value8() {
    return getEarthquakeId();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public EarthquakeRecord value1(Long value) {
    setId(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public EarthquakeRecord value2(LocalDateTime value) {
    setTime(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public EarthquakeRecord value3(BigDecimal value) {
    setLatitude(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public EarthquakeRecord value4(BigDecimal value) {
    setLongitude(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public EarthquakeRecord value5(BigDecimal value) {
    setDepth(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public EarthquakeRecord value6(BigDecimal value) {
    setMag(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public EarthquakeRecord value7(String value) {
    setPlace(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public EarthquakeRecord value8(String value) {
    setEarthquakeId(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public EarthquakeRecord values(Long value1, LocalDateTime value2, BigDecimal value3,
      BigDecimal value4, BigDecimal value5, BigDecimal value6, String value7,
      String value8) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    value6(value6);
    value7(value7);
    value8(value8);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached EarthquakeRecord
   */
  public EarthquakeRecord() {
    super(Earthquake.EARTHQUAKE);
  }

  /**
   * Create a detached, initialised EarthquakeRecord
   */
  public EarthquakeRecord(Long id, LocalDateTime time, BigDecimal latitude,
      BigDecimal longitude, BigDecimal depth, BigDecimal mag, String place,
      String earthquakeId) {
    super(Earthquake.EARTHQUAKE);

    set(0, id);
    set(1, time);
    set(2, latitude);
    set(3, longitude);
    set(4, depth);
    set(5, mag);
    set(6, place);
    set(7, earthquakeId);
  }
}
